{{#> decorators/page
  title="Regexies documentation"
  description="The library includes a list of popular regex functions for every project usage. You can use special builder functions to create your own regexes."
  keywords="regular, expressions, regex, regexp, match, regular expressions, js regex, javascript regex"
  pathToPublic="./public"
}}
  <main>
    <h1>Regexies documentation</h1>
    {{!-- 
      createIs function example
    --}}
    {{#> content-container/content-container
      titleId="createIs"
      title="createIs"
    }}
      <p>This function generates regex based on options. This function uses the same option parameters as <a href="#is" data-nav-url="#is" data-action="content-title-link">is</a> function.</p>
      {{#> code-example/code-example}}
        <pre>
          <span class="pl-c">/**</span>
          <span class="pl-c"> * <span class="pl-k">@param</span>  {<span class="pl-smi">Object | Array</span>} userOptions Option object or array of option objects</span>
          <span class="pl-c"> * <span class="pl-k">@param</span>  {<span class="pl-smi">Boolean</span>} checkOptionsInput Check type of option values, by default set to "false"</span>
          <span class="pl-c"> * <span class="pl-k">@return</span> {<span class="pl-smi">instanceof Regex</span>}</span>
          <span class="pl-c"> */</span>
          <span class="pl-en">createIs</span><span class="pl-kos">(</span><span class="pl-s1">userOptions</span><span class="pl-kos">,</span> <span class="pl-s1">checkOptionsInput</span><span class="pl-kos">)</span>
        </pre>
      {{/code-example/code-example}}
      <p>To test the "createIs" you can use our rules constructor with up to 5 rules (this restriction applies only for the demo, current function implementation has no limits):</p>
      <div class="mb-16" data-action="create-is-rules-list"></div>
      <div class="create-is-rule-item hidden bordered px-16 py-8 my-8" data-action="create-is-rule-item-example">
        <span>Rule id: <span data-action="create-is-rule-item-index"></span></span>
        {{> buttons/button-close
          title="Delete rule"
          dataAction="create-is-delete-rule"
        }}
      </div>
      {{> buttons/button
        text="Add a rule"
        dataAction="create-is-add-rule"
      }}
      {{!-- Add createIs rule form --}}
      {{#> forms/form-wrapper
        formClassNames="hidden bordered my-16"
        dataAction="create-is-form"
      }}
        <div class="flex-row">
          {{!-- createIs -> Allow numbers checkbox --}}
          {{#> forms/form-element-wrapper
            id="create-is-number"
            labelText="Allow numbers"
            showLabelAfter=true
            hideError=true
          }}
            {{> forms/input-checkbox
              id="create-is-number"
              name="numbers"
              checked=false
            }}
          {{/forms/form-element-wrapper}}
          {{!-- createIs -> Optional checkbox --}}
          {{#> forms/form-element-wrapper
            id="create-is-optional"
            labelText="Rules are optional"
            showLabelAfter=true
            hideError=true
          }}
            {{> forms/input-checkbox
              id="create-is-optional"
              name="optional"
              checked=false
            }}
          {{/forms/form-element-wrapper}}
        </div>
        <div class="flex-row">
          {{!-- createIs -> Allow upper/lowercase letters checkbox --}}
          {{#> forms/form-element-wrapper
            id="create-is-letters-all"
            labelText="Allow capital/lowercase letters"
            showLabelAfter=true
            hideError=true
          }}
            {{> forms/input-checkbox
              data-action="create-is-letters"
              id="create-is-letters-all"
              name="lettersAll"
              checked=false
            }}
          {{/forms/form-element-wrapper}}
          {{!-- createIs -> Allow capital letters checkbox --}}
          {{#> forms/form-element-wrapper
            id="create-is-letters-capital"
            labelText="Allow capital letters"
            showLabelAfter=true
            hideError=true
          }}
            {{> forms/input-checkbox
              data-action="create-is-letters"
              id="create-is-letters-capital"
              name="lettersCapital"
              checked=false
            }}
          {{/forms/form-element-wrapper}}
          {{!-- createIs -> Allow lowercase letters checkbox --}}
          {{#> forms/form-element-wrapper
            id="create-is-letters-lowercase"
            labelText="Allow lowercase letters"
            showLabelAfter=true
            hideError=true
          }}
            {{> forms/input-checkbox
              data-action="create-is-letters"
              id="create-is-letters-lowercase"
              name="lettersLowercase"
              checked=false
            }}
          {{/forms/form-element-wrapper}}
        </div>
        <div class="flex-row">
          {{!-- createIs -> Language select --}}
          {{#> forms/form-element-wrapper
            id="create-is-language"
            labelText="Allow letters by language"
            hideError=true
          }}
            {{#> forms/select
              id="create-is-number"
              name="lettersCountry"
              value="en"
            }}
              <option value="en">English</option>
              <option value="de">German</option>
              <option value="es">Spanish</option>
              <option value="ru">Russian</option>
              <option value="ua">Ukrainian</option>
              <option value="fr">French</option>
            {{/forms/select}}
          {{/forms/form-element-wrapper}}
          {{!-- createIs -> Min length input --}}
          {{#> forms/form-element-wrapper
            id="create-is-min-length"
            labelText="Min length"
            hideError=true
          }}
            {{> forms/input-number
              id="create-is-min-length"
              name="minLength"
              min=0
              value=undefined
            }}
          {{/forms/form-element-wrapper}}
          {{!-- createIs -> Max length input --}}
          {{#> forms/form-element-wrapper
            id="create-is-min-length"
            labelText="Max length"
            hideError=true
          }}
            {{> forms/input-number
              id="create-is-min-length"
              name="maxLength"
              min=1
              value=undefined
            }}
          {{/forms/form-element-wrapper}}
          {{!-- createIs -> Special characters input --}}
          {{#> forms/form-element-wrapper
            id="create-is-special-characters"
            labelText="Special characters"
          }}
            {{> forms/input-text
              id="create-is-special-characters"
              name="specialCharacters"
              placeholderText="Enter special charachters"
              value=""
            }}
          {{/forms/form-element-wrapper}}
        </div>
        <div class="flex-row">
          {{!-- createIs -> Exact match input --}}
          {{#> forms/form-element-wrapper
            id="create-is-exact"
            labelText="Exactly match string"
          }}
            {{> forms/input-text
              id="create-is-exact"
              name="exact"
              placeholderText="Enter a text"
              value=""
            }}
          {{/forms/form-element-wrapper}}
          {{!-- createIs -> Regex range input --}}
          {{#> forms/form-element-wrapper
            id="create-is-range"
            labelText="Regex range"
          }}
            {{> forms/input-text
              id="create-is-range"
              name="range"
              placeholderText="Enter a range as 0-9 or a-z"
              value=""
            }}
          {{/forms/form-element-wrapper}}
        </div>
        <div class="flex-row">
          {{> buttons/button
            classNames="primary mr-16"
            text="Save"
            dataAction="create-is-save-rule"
          }}
          {{> buttons/button
            text="Cancel"
            dataAction="create-is-cancel-rule"
          }}
        </div>
      {{/forms/form-wrapper}}
      <p class="pt-24">Test your custom createIs regex <span data-action="create-is-regex"></span> created using rules above.</p>
      {{#> forms/form-element-wrapper
        id="create-is-example"
        labelText="Enter some text here"
        errorText="A string doesn't match your created regex"
      }}
        {{> forms/input-text
          dataAction="create-is-example"
          id="create-is-example"
        }}
      {{/forms/form-element-wrapper}}
    {{/content-container/content-container}}
    {{!--
      escape function example
    --}}
    {{#> content-container/content-container
      titleId="escape"
      title="Escape"
    }}
      <h3 class="pt-16">escapeShort and escapeLong functions</h3>
      <p>Use escapeShort to escape strings with length <= 60 and escapeLong for strings longer than 60 symbols.</p>
      {{#> code-example/code-example}}
        <pre>
          <span class="pl-c">/**</span>
          <span class="pl-c"> * <span class="pl-k">@param</span>  {<span class="pl-smi">String</span>} string String to escape</span>
          <span class="pl-c"> */</span>
          <span class="pl-en">escapeShort</span><span class="pl-kos">(</span><span class="pl-s1">string</span><span class="pl-kos">)</span> <span class="pl-c">// custom function with for loop</span>
          <span class="pl-en">escapeLong</span><span class="pl-kos">(</span><span class="pl-s1">string</span><span class="pl-kos">)</span>  <span class="pl-c">// string.replace(/[\.\^\$\*\+\?\(\)\[\]\{\}\\\|\/\-]/g, '\\$&amp;');</span>
        </pre>
      {{/code-example/code-example}}
      <p>Use this function to escape special characters that should be escaped in Regex. The function decides which helper function to use escapeShort or escapeLong depends on length of the string.</p>
      <p><strong>Result: </strong><span data-action="escape-example-result"></span></p>
      {{#> forms/form-element-wrapper
        id="escape-example"
        labelText="Enter some special characters"
      }}
        {{> forms/input-text
          dataAction="escape-example-input"
          id="escape-example"
        }}
      {{/forms/form-element-wrapper}}
    {{/content-container/content-container}}
    {{!-- 
      isEmail function example 
    --}}
    {{#> content-container/content-container
      titleId="isEmail"
      title="isEmail"
    }}
      <p>Verify email address using "isEmail" function. This function checks common addresses, but doesn't include all possible names. If your project should support specific email addresses, it's better to create your own extended regex.</p>
      {{#> code-example/code-example}}
        <pre>
          <span class="pl-k">const</span> <span class="pl-s1">isCorrectEmail</span> <span class="pl-c1">=</span> <span class="pl-en">isEmail</span><span class="pl-kos">(</span><span class="pl-s">'email@address.com'</span><span class="pl-kos">)</span> <span class="pl-c">// true</span>
          <span class="pl-k">const</span> <span class="pl-s1">isCorrectEmail</span> <span class="pl-c1">=</span> <span class="pl-en">isEmail</span><span class="pl-kos">(</span><span class="pl-s">'email@address.c'</span><span class="pl-kos">)</span> <span class="pl-c">// false</span>
        </pre>
      {{/code-example/code-example}}
      {{#> forms/form-element-wrapper
        id="email-example"
        labelText="Enter an email"
        errorText="Please enter correct email address"
      }}
        {{> forms/input-text
          dataAction="match-email"
          id="email-example"
          placeholderText="email@site.com"
        }}
      {{/forms/form-element-wrapper}}
    {{/content-container/content-container}}
    {{!-- 
      isPassword function example
    --}}
    {{#> content-container/content-container
      titleId="isPassword"
      title="isPassword"
    }}
      <p>Verify passwords using "isPassword" function. By default password's length should be 8-30 and !"§$%&()=?*+#,.;:_- are allowed symbols.</p>
      {{#> code-example/code-example}}
        <pre>
          <span class="pl-k">const</span> <span class="pl-s1">isCorrectPassword</span> <span class="pl-c1">=</span> <span class="pl-en">isPassword</span><span class="pl-kos">(</span><span class="pl-s">'asdsa%&amp;()=123'</span><span class="pl-kos">)</span> <span class="pl-c">// true</span>
          <span class="pl-k">const</span> <span class="pl-s1">isCorrectPassword</span> <span class="pl-c1">=</span> <span class="pl-en">isPassword</span><span class="pl-kos">(</span><span class="pl-s">'!"§$%&amp;a'</span><span class="pl-kos">)</span> <span class="pl-c">// false (too short)</span>
          <span class="pl-k">const</span> <span class="pl-s1">isCorrectPassword</span> <span class="pl-c1">=</span> <span class="pl-en">isPassword</span><span class="pl-kos">(</span><span class="pl-s">'!"§$%&amp;aasdasdajhdawzdgaw56789asdaskdjn?*+#,.;'</span><span class="pl-kos">)</span> <span class="pl-c">// false (too long)</span>
        </pre>
      {{/code-example/code-example}}
      <p>You can extend current function changing min/max length and add your own set of supported symbols isPassword(password, minLength, maxLength, customSetOfSymbols)</p>
      {{#> code-example/code-example}}
        <pre>
          <span class="pl-k">const</span> <span class="pl-s1">isCorrectPassword</span> <span class="pl-c1">=</span> <span class="pl-en">isPassword</span><span class="pl-kos">(</span><span class="pl-s">'123abc'</span><span class="pl-kos">,</span> <span class="pl-c1">5</span><span class="pl-kos">)</span> <span class="pl-c">// true</span>
          <span class="pl-k">const</span> <span class="pl-s1">isCorrectPassword</span> <span class="pl-c1">=</span> <span class="pl-en">isPassword</span><span class="pl-kos">(</span><span class="pl-s">'!"§$%&amp;aasdasdajhdawzdgaw56789asdaskdjn?*+#,.;'</span><span class="pl-kos">,</span> <span class="pl-c1">8</span><span class="pl-kos">,</span> <span class="pl-c1">60</span><span class="pl-kos">)</span> <span class="pl-c">// true</span>
          <span class="pl-k">const</span> <span class="pl-s1">isCorrectPassword</span> <span class="pl-c1">=</span> <span class="pl-en">isPassword</span><span class="pl-kos">(</span><span class="pl-s">'123abc°'</span><span class="pl-kos">,</span> <span class="pl-c1">5</span><span class="pl-kos">,</span> <span class="pl-c1">20</span><span class="pl-kos">,</span> <span class="pl-s">'°'</span><span class="pl-kos">)</span> <span class="pl-c">// true</span>
          <span class="pl-c">// but</span>
          <span class="pl-k">const</span> <span class="pl-s1">isCorrectPassword</span> <span class="pl-c1">=</span> <span class="pl-en">isPassword</span><span class="pl-kos">(</span><span class="pl-s">'123abc°!'</span><span class="pl-kos">,</span> <span class="pl-c1">5</span><span class="pl-kos">,</span> <span class="pl-c1">20</span><span class="pl-kos">,</span> <span class="pl-s">'°'</span><span class="pl-kos">)</span> <span class="pl-c">// false</span>
        </pre>
      {{/code-example/code-example}}
      <h3 class="py-8">Default password function</h3>
      {{#> forms/form-element-wrapper
        id="password-default-example"
        labelText="Enter a password"
        errorText="Password's length should be 8-30 and !\"§$%&()=?*+#,.;:_- are allowed symbols"
      }}
        {{> forms/input-text
          dataAction="match-default-password"
          id="password-default-example"
          placeholderText="Password"
        }}
      {{/forms/form-element-wrapper}}
      {{!-- 
        Custom password options
      --}}
      <h3>Custom password function</h3>
      <p>Create your own password using min/max length and allowed symbols options.</p>
      {{#> forms/form-wrapper
        dataAction="custom-password-form"
        isRow=true
      }}
        {{!-- isPassword custom -> Min input --}}
        {{#> forms/form-element-wrapper
          id="min-length-custom-password"
          labelText="Min length"
          hideError=true
        }}
          {{> forms/input-number
            id="min-length-custom-password"
            name="minLengthPassword"
            min=1
            value=8
          }}
        {{/forms/form-element-wrapper}}
        {{!-- isPassword custom -> Max input --}}
        {{#> forms/form-element-wrapper
          id="max-length-custom-password"
          labelText="Max length"
          hideError=true
        }}
          {{> forms/input-number
            id="max-length-custom-password"
            name="maxLengthPassword"
            min=2
            value=16
          }}
        {{/forms/form-element-wrapper}}
        {{!-- isPassword custom -> Special characters input --}}
        {{#> forms/form-element-wrapper
          id="allowed-characters-custom-password"
          labelText="Special characters"
        }}
          {{> forms/input-text
            id="allowed-characters-custom-password"
            name="specialCharactersPassword"
            placeholderText="Enter allowed charachters"
            value="!\"§$%&()=?*+#,.;:_-"
          }}
        {{/forms/form-element-wrapper}}
      {{/forms/form-wrapper}}
      {{!-- isPassword custom -> Test custom password input --}}
      {{#> forms/form-element-wrapper
        id="password-custom-example"
        labelText="Test a custom password"
        errorText="Password's length should be between {min}-{max} and {character} are allowed symbols"
      }}
        {{> forms/input-text
          dataAction="match-custom-password"
          id="password-custom-example"
          placeholderText="Custom password"
        }}
      {{/forms/form-element-wrapper}}
    {{/content-container/content-container}}
  </main>
{{/decorators/page}}
